<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;size&apos; from expression &apos;map.size()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;size&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.MapTest.main()&apos;&#x0A;- Variable expression: &apos;map.size()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;size&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{MapTest.java" name="size" replace="true" selection="391 0" stamp="1508031084313" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;empty&apos; from expression &apos;map.isEmpty()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;empty&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.MapTest.main()&apos;&#x0A;- Variable expression: &apos;map.isEmpty()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;empty&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{MapTest.java" name="empty" replace="true" selection="419 0" stamp="1508031090370" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;containsKey&apos; from expression &apos;map.containsKey(1)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;containsKey&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.MapTest.main()&apos;&#x0A;- Variable expression: &apos;map.containsKey(1)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;containsKey&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{MapTest.java" name="containsKey" replace="true" selection="533 0" stamp="1508031157008" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;containsValue&apos; from expression &apos;map.containsValue(&quot;a&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;containsValue&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.MapTest.main()&apos;&#x0A;- Variable expression: &apos;map.containsValue(&quot;a&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;containsValue&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{MapTest.java" name="containsValue" replace="true" selection="581 0" stamp="1508031168749" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;keySet&apos; from expression &apos;map.keySet()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;keySet&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.MapTest.main()&apos;&#x0A;- Variable expression: &apos;map.keySet()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;keySet&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{MapTest.java" name="keySet" replace="true" selection="713 0" stamp="1508031249367" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;entrySet&apos; from expression &apos;map.entrySet()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;entrySet&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.MapTest.main()&apos;&#x0A;- Variable expression: &apos;map.entrySet()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;entrySet&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{MapTest.java" name="entrySet" replace="true" selection="867 0" stamp="1508031292411" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;iterator&apos; from expression &apos;set.iterator()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;iterator&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SetTest.main()&apos;&#x0A;- Variable expression: &apos;set.iterator()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;iterator&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SetTest.java" name="iterator" replace="true" selection="368 0" stamp="1508031993719" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;next&apos; from expression &apos;iterator.next()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;next&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SetTest.main()&apos;&#x0A;- Variable expression: &apos;iterator.next()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;next&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SetTest.java" name="next" replace="true" selection="475 0" stamp="1508032008884" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;contains&apos; from expression &apos;set.contains(2)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;contains&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SetTest.main()&apos;&#x0A;- Variable expression: &apos;set.contains(2)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;contains&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SetTest.java" name="contains" replace="true" selection="591 0" stamp="1508032195997" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;array&apos; from expression &apos;set.toArray()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;array&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SetTest.main()&apos;&#x0A;- Variable expression: &apos;set.toArray()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;array&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SetTest.java" name="array" replace="true" selection="708 0" stamp="1508032266717" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;array2&apos; from expression &apos;set.toArray(new Integer[1])&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;array2&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SetTest.main()&apos;&#x0A;- Variable expression: &apos;set.toArray(new Integer[1])&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;array2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SetTest.java" name="array2" replace="true" selection="783 0" stamp="1508032300173" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;read&apos; from expression &apos;BufferedInputFile.read(&quot;/home/liutao/fileOp/Directory.java&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;read&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SortedMapTest.main()&apos;&#x0A;- Variable expression: &apos;BufferedInputFile.read(&quot;/home/liutao/fileOp/Directory.java&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;read&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SortedMapTest.java" name="read" replace="true" selection="283 0" stamp="1508033554749" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;read&apos; from expression &apos;TextFile.read(&quot;/home/liutao/fileOp/Directory.java&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;read&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SortedMapTest.main()&apos;&#x0A;- Variable expression: &apos;TextFile.read(&quot;/home/liutao/fileOp/Directory.java&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;read&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SortedMapTest.java" name="read" replace="true" selection="356 0" stamp="1508033760178" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;split&apos; from expression &apos;read.replaceAll(&quot;[\\u4e00-\\u9fa5]&quot;,&quot;&quot;).split(&quot;\\W+&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;split&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SortedMapTest.main()&apos;&#x0A;- Variable expression: &apos;read.replaceAll(&quot;[\\u4e00-\\u9fa5]&quot;,&quot;&quot;).split(&quot;\\W+&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;split&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SortedMapTest.java" name="split" replace="true" selection="456 0" stamp="1508033919751" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;firstKey&apos; from expression &apos;sortedMap.firstKey()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;firstKey&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SortedMapTest.main()&apos;&#x0A;- Variable expression: &apos;sortedMap.firstKey()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;firstKey&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SortedMapTest.java" name="firstKey" replace="true" selection="843 0" stamp="1508034551247" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;lastKey&apos; from expression &apos;sortedMap.lastKey()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;lastKey&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SortedMapTest.main()&apos;&#x0A;- Variable expression: &apos;sortedMap.lastKey()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;lastKey&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SortedMapTest.java" name="lastKey" replace="true" selection="884 0" stamp="1508034573993" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;tailMap&apos; from expression &apos;map.tailMap(&quot;tool&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;tailMap&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SortedMapTest.main()&apos;&#x0A;- Variable expression: &apos;map.tailMap(&quot;tool&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;tailMap&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SortedMapTest.java" name="tailMap" replace="true" selection="991 0" stamp="1508034696025" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;string&apos; from expression &apos;(&quot;File&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;string&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SortedMapTest.main()&apos;&#x0A;- Variable expression: &apos;(&quot;File&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;string&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SortedMapTest.java" name="string" replace="true" selection="1089 0" stamp="1508034755323" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;headMap&apos; from expression &apos;map.headMap(&quot;File&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;headMap&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SortedMapTest.main()&apos;&#x0A;- Variable expression: &apos;map.headMap(&quot;File&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;headMap&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SortedMapTest.java" name="headMap" replace="true" selection="1085 0" stamp="1508034819027" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;lowerKey&apos; from expression &apos;map.lowerKey(&quot;File&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;lowerKey&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SortedMapTest.main()&apos;&#x0A;- Variable expression: &apos;map.lowerKey(&quot;File&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;lowerKey&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SortedMapTest.java" name="lowerKey" replace="true" selection="1197 0" stamp="1508034935623" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;floorKey&apos; from expression &apos;map.floorKey(&quot;File&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;floorKey&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SortedMapTest.main()&apos;&#x0A;- Variable expression: &apos;map.floorKey(&quot;File&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;floorKey&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SortedMapTest.java" name="floorKey" replace="true" selection="1239 0" stamp="1508034960299" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;floorEntry&apos; from expression &apos;map.floorEntry(&quot;util&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;floorEntry&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SortedMapTest.main()&apos;&#x0A;- Variable expression: &apos;map.floorEntry(&quot;util&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;floorEntry&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SortedMapTest.java" name="floorEntry" replace="true" selection="1328 0" stamp="1508035011192" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;higherEntry&apos; from expression &apos;map.higherEntry(&quot;util&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;higherEntry&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SortedMapTest.main()&apos;&#x0A;- Variable expression: &apos;map.higherEntry(&quot;util&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;higherEntry&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SortedMapTest.java" name="higherEntry" replace="true" selection="1391 0" stamp="1508035022252" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;descendingKeySet&apos; from expression &apos;map.descendingKeySet()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;descendingKeySet&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SortedMapTest.main()&apos;&#x0A;- Variable expression: &apos;map.descendingKeySet()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;descendingKeySet&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SortedMapTest.java" name="descendingKeySet" replace="true" selection="1507 0" stamp="1508035144139" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;floor&apos; from expression &apos;map.descendingKeySet().floor(&quot;pattern&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;floor&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.SortedMapTest.main()&apos;&#x0A;- Variable expression: &apos;map.descendingKeySet().floor(&quot;pattern&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;floor&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{SortedMapTest.java" name="floor" replace="true" selection="1665 0" stamp="1508035303477" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;copyOf&apos; from expression &apos;Arrays.copyOf(persons,5)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;copyOf&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.QueueTest.fun1()&apos;&#x0A;- Variable expression: &apos;Arrays.copyOf(persons,5)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;copyOf&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{QueueTest.java" name="copyOf" replace="true" selection="939 0" stamp="1508040378572" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;t2&apos; from expression &apos;t&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;t2&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.ToArrayTest.toArray()&apos;&#x0A;- Variable expression: &apos;t&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;t2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{ToArrayTest.java" name="t2" replace="true" selection="85 0" stamp="1508071845086" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;componentType&apos; from expression &apos;t.getClass().getComponentType()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;componentType&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.ToArrayTest.toArray()&apos;&#x0A;- Variable expression: &apos;t.getClass().getComponentType()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;componentType&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{ToArrayTest.java" name="componentType" replace="true" selection="119 0" stamp="1508071860367" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;genTest&apos; from expression &apos;new GenTest&lt;A&gt;()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;genTest&apos;&#x0A;- Destination method: &apos;lt.f.enumX.GenTest.main()&apos;&#x0A;- Variable expression: &apos;new GenTest&lt;A&gt;()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;genTest&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{GenTest.java" name="genTest" replace="true" selection="119 0" stamp="1508120846314" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;fun3&apos; from expression &apos;fun3()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;fun3&apos;&#x0A;- Destination method: &apos;lt.f.enumX.Test111.main()&apos;&#x0A;- Variable expression: &apos;fun3()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;fun3&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{Test111.java" name="fun3" replace="true" selection="495 0" stamp="1508122966899" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;fun4&apos; from expression &apos;fun4(new String())&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;fun4&apos;&#x0A;- Destination method: &apos;lt.f.enumX.Test111.main()&apos;&#x0A;- Variable expression: &apos;fun4(new String())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;fun4&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{Test111.java" name="fun4" replace="true" selection="708 0" stamp="1508123187881" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;class1&apos; from expression &apos;obj.getClass()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;class1&apos;&#x0A;- Destination method: &apos;lt.f.enumX.Test111.fun4()&apos;&#x0A;- Variable expression: &apos;obj.getClass()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;class1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{Test111.java" name="class1" replace="true" selection="418 0" stamp="1508123256327" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newInstance&apos; from expression &apos;Array.newInstance(class1,10)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;newInstance&apos;&#x0A;- Destination method: &apos;lt.f.enumX.Test111.fun4()&apos;&#x0A;- Variable expression: &apos;Array.newInstance(class1,10)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;newInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{Test111.java" name="newInstance" replace="true" selection="541 0" stamp="1508123287301" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;fun4&apos; from expression &apos;sTest111.fun4(new String())&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;fun4&apos;&#x0A;- Destination method: &apos;lt.f.enumX.Test111.main()&apos;&#x0A;- Variable expression: &apos;sTest111.fun4(new String())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;fun4&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{Test111.java" name="fun4" replace="true" selection="1228 0" stamp="1508123766768" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;parseInt&apos; from expression &apos;Integer.parseInt(string)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;parseInt&apos;&#x0A;- Destination method: &apos;lt.f.enumX.Test111.fun1()&apos;&#x0A;- Variable expression: &apos;Integer.parseInt(string)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;parseInt&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{Test111.java" name="parseInt" replace="true" selection="1476 0" stamp="1508165297455" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;binarySearch&apos; from expression &apos;Collections.binarySearch(list,3)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;binarySearch&apos;&#x0A;- Destination method: &apos;lt.h.collections.StaticMethod.fun1()&apos;&#x0A;- Variable expression: &apos;Collections.binarySearch(list,3)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;binarySearch&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.h.collections{StaticMethod.java" name="binarySearch" replace="true" selection="315 0" stamp="1508474994801" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;binarySearch2&apos; from expression &apos;Collections.binarySearch(list,3,Collections.reverseOrder())&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;binarySearch2&apos;&#x0A;- Destination method: &apos;lt.h.collections.StaticMethod.fun1()&apos;&#x0A;- Variable expression: &apos;Collections.binarySearch(list,3,Collections.reverseOrder())&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;binarySearch2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.h.collections{StaticMethod.java" name="binarySearch2" replace="true" selection="434 0" stamp="1508475094372" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;max&apos; from expression &apos;Collections.max(list)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;max&apos;&#x0A;- Destination method: &apos;lt.h.collections.StaticMethod.fun2()&apos;&#x0A;- Variable expression: &apos;Collections.max(list)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;max&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.h.collections{StaticMethod.java" name="max" replace="true" selection="1110 0" stamp="1508475487253" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;frequency&apos; from expression &apos;Collections.frequency(list,1)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;frequency&apos;&#x0A;- Destination method: &apos;lt.h.collections.StaticMethod.fun3()&apos;&#x0A;- Variable expression: &apos;Collections.frequency(list,1)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;frequency&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.h.collections{StaticMethod.java" name="frequency" replace="true" selection="1352 0" stamp="1508475587258" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;indexOfSubList&apos; from expression &apos;Collections.indexOfSubList(list,Arrays.asList(13,12))&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;indexOfSubList&apos;&#x0A;- Destination method: &apos;lt.h.collections.StaticMethod.fun3()&apos;&#x0A;- Variable expression: &apos;Collections.indexOfSubList(list,Arrays.asList(13,12))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;indexOfSubList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.h.collections{StaticMethod.java" name="indexOfSubList" replace="true" selection="1429 0" stamp="1508477293657" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;disjoint&apos; from expression &apos;Collections.disjoint(Arrays.asList(1,2),Arrays.asList(1,2))&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;disjoint&apos;&#x0A;- Destination method: &apos;lt.h.collections.StaticMethod.fun4()&apos;&#x0A;- Variable expression: &apos;Collections.disjoint(Arrays.asList(1,2),Arrays.asList(1,2))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;disjoint&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.h.collections{StaticMethod.java" name="disjoint" replace="true" selection="1640 0" stamp="1508477369893" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;replaceAll&apos; from expression &apos;Collections.replaceAll(list,1,3333)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;replaceAll&apos;&#x0A;- Destination method: &apos;lt.h.collections.StaticMethod.fun5()&apos;&#x0A;- Variable expression: &apos;Collections.replaceAll(list,1,3333)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;replaceAll&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.h.collections{StaticMethod.java" name="replaceAll" replace="true" selection="1908 0" stamp="1508477677555" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;emptyList&apos; from expression &apos;Collections.emptyList()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;emptyList&apos;&#x0A;- Destination method: &apos;lt.h.collections.CollectionDesignPattern.fun1()&apos;&#x0A;- Variable expression: &apos;Collections.emptyList()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;emptyList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.h.collections{CollectionDesignPattern.java" name="emptyList" replace="true" selection="202 0" stamp="1508478903509" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;singleton&apos; from expression &apos;Collections.singleton(&quot;zhangsan&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;singleton&apos;&#x0A;- Destination method: &apos;lt.h.collections.CollectionDesignPattern.fun2()&apos;&#x0A;- Variable expression: &apos;Collections.singleton(&quot;zhangsan&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;singleton&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.h.collections{CollectionDesignPattern.java" name="singleton" replace="true" selection="440 0" stamp="1508479401428" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;singletonList&apos; from expression &apos;Collections.singletonList(&quot;lisi&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;singletonList&apos;&#x0A;- Destination method: &apos;lt.h.collections.CollectionDesignPattern.fun2()&apos;&#x0A;- Variable expression: &apos;Collections.singletonList(&quot;lisi&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;singletonList&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.h.collections{CollectionDesignPattern.java" name="singletonList" replace="true" selection="523 0" stamp="1508479440421" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;singletonMap&apos; from expression &apos;Collections.singletonMap(1,&quot;z&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;singletonMap&apos;&#x0A;- Destination method: &apos;lt.h.collections.CollectionDesignPattern.fun2()&apos;&#x0A;- Variable expression: &apos;Collections.singletonMap(1,&quot;z&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;singletonMap&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.h.collections{CollectionDesignPattern.java" name="singletonMap" replace="true" selection="588 0" stamp="1508479464808" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;read&apos; from expression &apos;BufferedInputFile.read(&quot;/home/liutao/fileOp/Directory.java&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;read&apos;&#x0A;- Destination method: &apos;lt.z.test.CountWords.main()&apos;&#x0A;- Variable expression: &apos;BufferedInputFile.read(&quot;/home/liutao/fileOp/Directory.java&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;read&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.z.test{CountWords.java" name="read" replace="true" selection="198 0" stamp="1508567884880" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;split&apos; from expression &apos;read.split(&quot;\\W+&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;split&apos;&#x0A;- Destination method: &apos;lt.z.test.CountWords.main()&apos;&#x0A;- Variable expression: &apos;read.split(&quot;\\W+&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;split&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.z.test{CountWords.java" name="split" replace="true" selection="271 0" stamp="1508567918789" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;peek&apos; from expression &apos;p.peek()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;peek&apos;&#x0A;- Destination method: &apos;lt.z.test.Topk.add()&apos;&#x0A;- Variable expression: &apos;p.peek()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;peek&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.z.test{Topk.java" name="peek" replace="true" selection="279 0" stamp="1508568523945" version="1.0"/>
</session>