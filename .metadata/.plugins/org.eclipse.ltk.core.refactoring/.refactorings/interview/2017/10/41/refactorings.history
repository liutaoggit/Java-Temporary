<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;readLine&apos; from expression &apos;in.readLine()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;readLine&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.Test1.fun4()&apos;&#x0A;- Variable expression: &apos;in.readLine()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;readLine&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{Test1.java" name="readLine" replace="true" selection="1520 0" stamp="1507457523888" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;matches&apos; from expression &apos;pattern.matcher(string).matches()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;matches&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.Test1.fun5()&apos;&#x0A;- Variable expression: &apos;pattern.matcher(string).matches()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;matches&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{Test1.java" name="matches" replace="true" selection="1814 0" stamp="1507429153999" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;matcher&apos; from expression &apos;pattern.matcher(string)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;matcher&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.Test1.fun5()&apos;&#x0A;- Variable expression: &apos;pattern.matcher(string)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;matcher&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{Test1.java" name="matcher" replace="true" selection="1805 0" stamp="1507429168743" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;readInt&apos; from expression &apos;in.readInt()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;readInt&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.StoringAndRecoveringData.main()&apos;&#x0A;- Variable expression: &apos;in.readInt()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;readInt&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{StoringAndRecoveringData.java" name="readInt" replace="true" selection="778 0" stamp="1507429928198" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;readFloat&apos; from expression &apos;in.readFloat()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;readFloat&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.StoringAndRecoveringData.main()&apos;&#x0A;- Variable expression: &apos;in.readFloat()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;readFloat&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{StoringAndRecoveringData.java" name="readFloat" replace="true" selection="809 0" stamp="1507429937068" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;readUTF&apos; from expression &apos;in.readUTF()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;readUTF&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.StoringAndRecoveringData.main()&apos;&#x0A;- Variable expression: &apos;in.readUTF()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;readUTF&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{StoringAndRecoveringData.java" name="readUTF" replace="true" selection="842 0" stamp="1507429946677" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;read&apos; from expression &apos;read(&quot;/home/liutao/fileOp/Directory.java&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;read&apos;&#x0A;- Destination method: &apos;lt.b.io.file.tool.TextFile.main()&apos;&#x0A;- Variable expression: &apos;read(&quot;/home/liutao/fileOp/Directory.java&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;read&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.tool{TextFile.java" name="read" replace="true" selection="2042 0" stamp="1507431391791" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;textFile&apos; from expression &apos;new TextFile(&quot;/home/liutao/fileOp/dir.txt&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;textFile&apos;&#x0A;- Destination method: &apos;lt.b.io.file.tool.TextFile.main()&apos;&#x0A;- Variable expression: &apos;new TextFile(&quot;/home/liutao/fileOp/dir.txt&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;textFile&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.tool{TextFile.java" name="textFile" replace="true" selection="2153 0" stamp="1507431598157" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;lt.b.io.file.classical.Ex&apos; to &apos;Ex17&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Original element: &apos;lt.b.io.file.classical.Ex&apos;&#x0A;- Renamed element: &apos;lt.b.io.file.classical.Ex17&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Ex&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;lt.b.io.file.classical{Ex.java[Ex" matchStrategy="1" name="Ex17" qualified="false" references="true" similarDeclarations="false" stamp="1507431772048" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;read&apos; from expression &apos;TextFile.read(&quot;/home/liutao/fileOp/dir.txt&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;read&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.Ex17.fun1()&apos;&#x0A;- Variable expression: &apos;TextFile.read(&quot;/home/liutao/fileOp/dir.txt&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;read&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{Ex17.java" name="read" replace="true" selection="189 0" stamp="1507431880484" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;charAt&apos; from expression &apos;read.charAt(i)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;charAt&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.Ex17.fun1()&apos;&#x0A;- Variable expression: &apos;read.charAt(i)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;charAt&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{Ex17.java" name="charAt" replace="true" selection="414 0" stamp="1507432091805" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;keySet&apos; from expression &apos;map.keySet()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;keySet&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.Ex17.fun1()&apos;&#x0A;- Variable expression: &apos;map.keySet()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;keySet&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{Ex17.java" name="keySet" replace="true" selection="522 0" stamp="1507432228401" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;read&apos; from expression &apos;BinaryFile.read(new File(&quot;/home/liutao/fileOp/dir.txt&quot;))&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;read&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.BinaryFile.main()&apos;&#x0A;- Variable expression: &apos;BinaryFile.read(new File(&quot;/home/liutao/fileOp/dir.txt&quot;))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;read&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{BinaryFile.java" name="read" replace="true" selection="553 0" stamp="1507432853505" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;integer&apos; from expression &apos;map.get(read[i])&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;integer&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.BinaryFile.main()&apos;&#x0A;- Variable expression: &apos;map.get(read[i])&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;integer&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{BinaryFile.java" name="integer" replace="true" selection="728 0" stamp="1507432943052" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;file&apos; from expression &apos;new File(&quot;./bin&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;file&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.Ex20.fun1()&apos;&#x0A;- Variable expression: &apos;new File(&quot;./bin&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;file&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{Ex20.java" name="file" replace="true" selection="218 0" stamp="1507433217673" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;walk&apos; from expression &apos;Directory.walk(&quot;./bin/lt/a/rtti&quot;,&quot;\\w+\\.class&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;walk&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.Ex20.fun1()&apos;&#x0A;- Variable expression: &apos;Directory.walk(&quot;./bin/lt/a/rtti&quot;,&quot;\\w+\\.class&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;walk&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{Ex20.java" name="walk" replace="true" selection="218 0" stamp="1507433347201" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;read&apos; from expression &apos;BinaryFile.read(file)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;read&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.Ex20.fun1()&apos;&#x0A;- Variable expression: &apos;BinaryFile.read(file)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;read&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{Ex20.java" name="read" replace="true" selection="466 0" stamp="1507434235925" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;lt.b.io.file.classical.Redirectinh&apos; to &apos;Redirecting&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Original element: &apos;lt.b.io.file.classical.Redirectinh&apos;&#x0A;- Renamed element: &apos;lt.b.io.file.classical.Redirecting&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Redirectinh&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;lt.b.io.file.classical{Redirectinh.java[Redirectinh" matchStrategy="1" name="Redirecting" qualified="false" references="true" similarDeclarations="false" stamp="1507440624647" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;testArray1&apos; from expression &apos;testArray1(5)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;testArray1&apos;&#x0A;- Destination method: &apos;lt.c.array.Ex1.fun1()&apos;&#x0A;- Variable expression: &apos;testArray1(5)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;testArray1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.c.array{Ex1.java" name="testArray1" replace="true" selection="339 0" stamp="1507473623575" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;flavorSet&apos; from expression &apos;flavorSet(3)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;flavorSet&apos;&#x0A;- Destination method: &apos;lt.c.array.IceCream.main()&apos;&#x0A;- Variable expression: &apos;flavorSet(3)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;flavorSet&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.c.array{IceCream.java" name="flavorSet" replace="true" selection="646 0" stamp="1507474577442" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;element2&apos; from expression &apos;d2.getElement()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;element2&apos;&#x0A;- Destination method: &apos;lt.d.generic.GenericBase.main()&apos;&#x0A;- Variable expression: &apos;d2.getElement()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;element2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.d.generic{GenericBase.java" name="element2" replace="true" selection="277 0" stamp="1507549355696" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;interview&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Original elements:&#x0A;     lt.d.generic.GenericBase.java&#x0A;- Assume clone() returns an instance of the receiver type&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;lt.d.generic{GenericBase.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1507549411369" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;instance&apos; from expression &apos;Dog.class.isInstance(dog)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;instance&apos;&#x0A;- Destination method: &apos;lt.d.generic.Ex4.fun1()&apos;&#x0A;- Variable expression: &apos;Dog.class.isInstance(dog)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;instance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.d.generic{Ex4.java" name="instance" replace="true" selection="344 0" stamp="1507550274220" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;rep&apos; from expression &apos;array2.rep()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;rep&apos;&#x0A;- Destination method: &apos;lt.d.generic.GenericArray2.main()&apos;&#x0A;- Variable expression: &apos;array2.rep()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;rep&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.d.generic{GenericArray2.java" name="rep" replace="true" selection="455 0" stamp="1507550729496" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;string&apos; from expression &apos;sA.get()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;string&apos;&#x0A;- Destination method: &apos;lt.c.array.Ex11.fun2()&apos;&#x0A;- Variable expression: &apos;sA.get()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;string&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.c.array{Ex11.java" name="string" replace="true" selection="254 0" stamp="1507554470676" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;equals&apos; from expression &apos;Arrays.equals(cat1s,cat2s)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;equals&apos;&#x0A;- Destination method: &apos;lt.c.array.Ex19.main()&apos;&#x0A;- Variable expression: &apos;Arrays.equals(cat1s,cat2s)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;equals&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.c.array{Ex19.java" name="equals" replace="true" selection="384 0" stamp="1507556110092" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;read&apos; from expression &apos;BufferedInputFile.read(&quot;/home/liutao/fileOp/Mutt.java&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;read&apos;&#x0A;- Destination method: &apos;lt.c.array.StringSorting.main()&apos;&#x0A;- Variable expression: &apos;BufferedInputFile.read(&quot;/home/liutao/fileOp/Mutt.java&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;read&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.c.array{StringSorting.java" name="read" replace="true" selection="274 0" stamp="1507557497916" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;split&apos; from expression &apos;read.split(&quot;\\W+&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;split&apos;&#x0A;- Destination method: &apos;lt.c.array.StringSorting.main()&apos;&#x0A;- Variable expression: &apos;read.split(&quot;\\W+&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;split&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.c.array{StringSorting.java" name="split" replace="true" selection="357 0" stamp="1507557638286" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;matcher&apos; from expression &apos;pattern.matcher(read)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;matcher&apos;&#x0A;- Destination method: &apos;lt.c.array.StringSorting.main()&apos;&#x0A;- Variable expression: &apos;pattern.matcher(read)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;matcher&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.c.array{StringSorting.java" name="matcher" replace="true" selection="555 0" stamp="1507557748835" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;binarySearch&apos; from expression &apos;Arrays.binarySearch(a,a[3])&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;binarySearch&apos;&#x0A;- Destination method: &apos;lt.c.array.Ex22.fun1()&apos;&#x0A;- Variable expression: &apos;Arrays.binarySearch(a,a[3])&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;binarySearch&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.c.array{Ex22.java" name="binarySearch" replace="true" selection="395 0" stamp="1507559699369" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;value2&apos; from expression &apos;holder.getValue()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;value2&apos;&#x0A;- Destination method: &apos;lt.d.generic.Holder.main()&apos;&#x0A;- Variable expression: &apos;holder.getValue()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;value2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.d.generic{Holder.java" name="value2" replace="true" selection="452 0" stamp="1507612131918" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;WildCard.java&apos; to &apos;hello/src/hello&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Destination element: &apos;hello/src/hello&apos;&#x0A;- Original element: &apos;lt.d.generic.WildCard.java&apos;" description="Copy compilation unit" destination="=hello/src&lt;hello" element1="/src&lt;lt.d.generic{WildCard.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1507615746714" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;analyze&apos; from expression &apos;analyze(Explore.class)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;analyze&apos;&#x0A;- Destination method: &apos;lt.f.enumX.Reflection_1.main()&apos;&#x0A;- Variable expression: &apos;analyze(Explore.class)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;analyze&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{Reflection_1.java" name="analyze" replace="true" selection="657 0" stamp="1507775789804" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;valueOf&apos; from expression &apos;Explore.valueOf(&quot;HERE&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;valueOf&apos;&#x0A;- Destination method: &apos;lt.f.enumX.Reflection_1.main()&apos;&#x0A;- Variable expression: &apos;Explore.valueOf(&quot;HERE&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;valueOf&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{Reflection_1.java" name="valueOf" replace="true" selection="783 0" stamp="1507775969329" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;analyze&apos; from expression &apos;analyze(Enum.class)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;analyze&apos;&#x0A;- Destination method: &apos;lt.f.enumX.Reflection_1.main()&apos;&#x0A;- Variable expression: &apos;analyze(Enum.class)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;analyze&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{Reflection_1.java" name="analyze" replace="true" selection="950 0" stamp="1507776147494" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;removeAll&apos; from expression &apos;analyze.removeAll(analyze)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;removeAll&apos;&#x0A;- Destination method: &apos;lt.f.enumX.Reflection_1.main()&apos;&#x0A;- Variable expression: &apos;analyze.removeAll(analyze)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;removeAll&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{Reflection_1.java" name="removeAll" replace="true" selection="1034 0" stamp="1507776227747" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;containsAll&apos; from expression &apos;analyze.containsAll(analyze1)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;containsAll&apos;&#x0A;- Destination method: &apos;lt.f.enumX.Reflection_1.main()&apos;&#x0A;- Variable expression: &apos;analyze.containsAll(analyze1)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;containsAll&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{Reflection_1.java" name="containsAll" replace="true" selection="1037 0" stamp="1507776281500" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;values&apos; from expression &apos;Search.values()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;values&apos;&#x0A;- Destination method: &apos;lt.f.enumX.UpcastEnum_2.main()&apos;&#x0A;- Variable expression: &apos;Search.values()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;values&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{UpcastEnum_2.java" name="values" replace="true" selection="129 0" stamp="1507776504021" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;random&apos; from expression &apos;Enums.random(Activity.class)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;random&apos;&#x0A;- Destination method: &apos;lt.f.enumX.RandomTest_3.main()&apos;&#x0A;- Variable expression: &apos;Enums.random(Activity.class)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;random&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{RandomTest_3.java" name="random" replace="true" selection="253 0" stamp="1507778865798" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;randomSelection&apos; from expression &apos;category_4.randomSelection()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;randomSelection&apos;&#x0A;- Destination method: &apos;lt.f.enumX.SecurityCategory_4.main()&apos;&#x0A;- Variable expression: &apos;category_4.randomSelection()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;randomSelection&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.f.enumX{SecurityCategory_4.java" name="randomSelection" replace="true" selection="708 0" stamp="1507780287576" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;lt.b.generic.Snippet&apos; to &apos;Tessxx&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Original element: &apos;lt.b.generic.Snippet&apos;&#x0A;- Renamed element: &apos;lt.b.generic.Tessxx&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Snippet&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;lt.b.generic{Snippet.java[Snippet" matchStrategy="1" name="Tessxx" qualified="false" references="true" similarDeclarations="false" stamp="1507798643028" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;max&apos; from expression &apos;max(new Integer[]{new Integer(1),2,4,3})&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;max&apos;&#x0A;- Destination method: &apos;lt.b.generic.Tessxx.main()&apos;&#x0A;- Variable expression: &apos;max(new Integer[]{new Integer(1),2,4,3})&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;max&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.generic{Tessxx.java" name="max" replace="true" selection="346 0" stamp="1507798692559" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;interfaces&apos; from expression &apos;tb.getClass().getInterfaces()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;interfaces&apos;&#x0A;- Destination method: &apos;lt.b.generic.Tessxx.fun3()&apos;&#x0A;- Variable expression: &apos;tb.getClass().getInterfaces()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;interfaces&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.generic{Tessxx.java" name="interfaces" replace="true" selection="1268 0" stamp="1507811526067" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;lt.b.generic.总结&apos; to &apos;类型参数和通配符总结&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Original element: &apos;lt.b.generic.总结&apos;&#x0A;- Renamed element: &apos;lt.b.generic.类型参数和通配符总结&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;总结&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;lt.b.generic{总结.java[总结" matchStrategy="1" name="类型参数和通配符总结" qualified="false" references="true" similarDeclarations="false" stamp="1507812389481" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;array&apos; from expression &apos;ints.toArray(Integer.class)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;array&apos;&#x0A;- Destination method: &apos;lt.b.generic.类型参数和通配符总结.fun6()&apos;&#x0A;- Variable expression: &apos;ints.toArray(Integer.class)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;array&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.generic{类型参数和通配符总结.java" name="array" replace="true" selection="1590 0" stamp="1507820129933" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;constructor&apos; from expression &apos;type.getConstructor(int.class)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;constructor&apos;&#x0A;- Destination method: &apos;lt.b.generic.DynamicArray.toArray()&apos;&#x0A;- Variable expression: &apos;type.getConstructor(int.class)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;constructor&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.generic{DynamicArray.java" name="constructor" replace="true" selection="1457 0" stamp="1507820866563" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newInstance&apos; from expression &apos;constructor.newInstance(1)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;newInstance&apos;&#x0A;- Destination method: &apos;lt.b.generic.DynamicArray.toArray()&apos;&#x0A;- Variable expression: &apos;constructor.newInstance(1)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;newInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.generic{DynamicArray.java" name="newInstance" replace="true" selection="1589 0" stamp="1507820881570" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;remove&apos; from expression &apos;arrayList.remove(1)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;remove&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.ArrayListxx.main()&apos;&#x0A;- Variable expression: &apos;arrayList.remove(1)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;remove&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{ArrayListxx.java" name="remove" replace="true" selection="489 0" stamp="1507856347372" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;remove2&apos; from expression &apos;arrayList.remove(22)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;remove2&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.ArrayListxx.main()&apos;&#x0A;- Variable expression: &apos;arrayList.remove(22)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;remove2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{ArrayListxx.java" name="remove2" replace="true" selection="557 0" stamp="1507856379554" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;set&apos; from expression &apos;arrayList.set(2,55)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;set&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.ArrayListxx.main()&apos;&#x0A;- Variable expression: &apos;arrayList.set(2,55)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;set&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{ArrayListxx.java" name="set" replace="true" selection="633 0" stamp="1507856434357" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;nextInt&apos; from expression &apos;rand.nextInt(47)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;nextInt&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.ArrayListxx.fun1()&apos;&#x0A;- Variable expression: &apos;rand.nextInt(47)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;nextInt&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{ArrayListxx.java" name="nextInt" replace="true" selection="1029 0" stamp="1507856611290" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;compareTo&apos; from expression &apos;string.compareTo(string2)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;compareTo&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.TreeMapxxx.fun11()&apos;&#x0A;- Variable expression: &apos;string.compareTo(string2)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;compareTo&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{TreeMapxxx.java" name="compareTo" replace="true" selection="3529 0" stamp="1507961960189" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;subMap&apos; from expression &apos;map.descendingMap().subMap(&quot;111&quot;,&quot;333&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;subMap&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.TreeMapxxx.fun14()&apos;&#x0A;- Variable expression: &apos;map.descendingMap().subMap(&quot;111&quot;,&quot;333&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;subMap&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{TreeMapxxx.java" name="subMap" replace="true" selection="4088 0" stamp="1507967300313" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;descendingMap&apos; from expression &apos;map.descendingMap()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;descendingMap&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.TreeMapxxx.fun14()&apos;&#x0A;- Variable expression: &apos;map.descendingMap()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;descendingMap&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{TreeMapxxx.java" name="descendingMap" replace="true" selection="4191 0" stamp="1507967545468" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;clone&apos; from expression &apos;s1.clone()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;clone&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.LowDeepCopy.fun1()&apos;&#x0A;- Variable expression: &apos;s1.clone()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;clone&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{LowDeepCopy.java" name="clone" replace="true" selection="347 0" stamp="1507969687312" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;readObject&apos; from expression &apos;objectInputStream.readObject()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;readObject&apos;&#x0A;- Destination method: &apos;lt.g.arraylist.ObjClone.cloneObj()&apos;&#x0A;- Variable expression: &apos;objectInputStream.readObject()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;readObject&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.g.arraylist{ObjClone.java" name="readObject" replace="true" selection="607 0" stamp="1507978731798" version="1.0"/>
</session>