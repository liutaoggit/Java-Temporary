<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;forName&apos; from expression &apos;Class.forName(&quot;lt.a.rtti.A&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;forName&apos;&#x0A;- Destination method: &apos;lt.a.rtti.ClassInitialization.main()&apos;&#x0A;- Variable expression: &apos;Class.forName(&quot;lt.a.rtti.A&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;forName&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.a.rtti{ClassInitialization.java" name="forName" replace="true" selection="127 0" stamp="1507096755501" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;string&apos; from expression &apos;&quot;sdqw&quot;&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;string&apos;&#x0A;- Destination method: &apos;lt.a.rtti.ClassInitialization.main()&apos;&#x0A;- Variable expression: &apos;&quot;sdqw&quot;&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;string&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.a.rtti{ClassInitialization.java" name="string" replace="true" selection="256 0" stamp="1507097049799" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;fun2&apos; from expression &apos;A.fun2()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;fun2&apos;&#x0A;- Destination method: &apos;lt.a.rtti.ClassInitialization.main()&apos;&#x0A;- Variable expression: &apos;A.fun2()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;fun2&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.a.rtti{ClassInitialization.java" name="fun2" replace="true" selection="344 0" stamp="1507097159996" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newInstance&apos; from expression &apos;aClass.newInstance()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;newInstance&apos;&#x0A;- Destination method: &apos;lt.a.rtti.ClassInitialization.main()&apos;&#x0A;- Variable expression: &apos;aClass.newInstance()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;newInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.a.rtti{ClassInitialization.java" name="newInstance" replace="true" selection="417 0" stamp="1507099020533" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;superclass&apos; from expression &apos;aClass.getSuperclass()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;superclass&apos;&#x0A;- Destination method: &apos;lt.a.rtti.ClassInitialization.main()&apos;&#x0A;- Variable expression: &apos;aClass.getSuperclass()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;superclass&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.a.rtti{ClassInitialization.java" name="superclass" replace="true" selection="507 0" stamp="1507099058831" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;Dog.java&apos; to &apos;interview/src/lt.a.rtti&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Destination element: &apos;interview/src/lt.a.rtti&apos;&#x0A;- Original element: &apos;lt.a.rtti.Dog.java&apos;" description="Copy compilation unit" destination="/src&lt;lt.a.rtti" element1="/src&lt;lt.a.rtti{Dog.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1507124605357" units="1" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;PetCount3.java&apos; to &apos;interview/src/lt.a.rtti.test&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Destination element: &apos;interview/src/lt.a.rtti.test&apos;&#x0A;- Original element: &apos;lt.a.rtti.PetCount3.java&apos;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;lt.a.rtti.test" element1="/src&lt;lt.a.rtti{PetCount3.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" patterns="*" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1507124767610" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;substring&apos; from expression &apos;result.substring(0,result.length() - 1)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;substring&apos;&#x0A;- Destination method: &apos;lt.a.rtti.test.PetCount3.PetCounter.count()&apos;&#x0A;- Variable expression: &apos;result.substring(0,result.length() - 1)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;substring&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.a.rtti.test{PetCount3.java" name="substring" replace="true" selection="707 0" stamp="1507128525063" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;methods&apos; from expression &apos;c.getMethods()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;methods&apos;&#x0A;- Destination method: &apos;lt.a.rtti.reflect.ShowMethods.outputMethodAndConstructor()&apos;&#x0A;- Variable expression: &apos;c.getMethods()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;methods&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.a.rtti.reflect{ShowMethods.java" name="methods" replace="true" selection="334 0" stamp="1507166434363" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;constructors&apos; from expression &apos;c.getConstructors()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;constructors&apos;&#x0A;- Destination method: &apos;lt.a.rtti.reflect.ShowMethods.outputMethodAndConstructor()&apos;&#x0A;- Variable expression: &apos;c.getConstructors()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;constructors&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.a.rtti.reflect{ShowMethods.java" name="constructors" replace="true" selection="409 0" stamp="1507166450798" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;constructor&apos; from expression &apos;toy.getConstructor(int.class)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;constructor&apos;&#x0A;- Destination method: &apos;lt.a.rtti.reflect.ToyTest.main()&apos;&#x0A;- Variable expression: &apos;toy.getConstructor(int.class)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;constructor&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.a.rtti.reflect{ToyTest.java" name="constructor" replace="true" selection="147 0" stamp="1507167463398" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;newInstance&apos; from expression &apos;constructor.newInstance(10)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;newInstance&apos;&#x0A;- Destination method: &apos;lt.a.rtti.reflect.ToyTest.main()&apos;&#x0A;- Variable expression: &apos;constructor.newInstance(10)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;newInstance&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.a.rtti.reflect{ToyTest.java" name="newInstance" replace="true" selection="254 0" stamp="1507167505718" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;field&apos; from expression &apos;aClass.getField(&quot;string&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;field&apos;&#x0A;- Destination method: &apos;lt.a.rtti.reflect.TestPrivateFields.main()&apos;&#x0A;- Variable expression: &apos;aClass.getField(&quot;string&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;field&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.a.rtti.reflect{TestPrivateFields.java" name="field" replace="true" selection="157 0" stamp="1507173142042" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;lt.b.generic.finalTest&apos; to &apos;FinalTest&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Original element: &apos;lt.b.generic.finalTest&apos;&#x0A;- Renamed element: &apos;lt.b.generic.FinalTest&apos;&#x0A;- Update references to refactored element&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;finalTest&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;lt.b.generic{finalTest.java[finalTest" matchStrategy="1" name="FinalTest" qualified="false" references="true" similarDeclarations="false" stamp="1507182818266" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;linkedStack&apos; from expression &apos;new LinkedStack&lt;String&gt;()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;linkedStack&apos;&#x0A;- Destination method: &apos;lt.b.generic.LinkedStack.main()&apos;&#x0A;- Variable expression: &apos;new LinkedStack&lt;String&gt;()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;linkedStack&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.generic{LinkedStack.java" name="linkedStack" replace="true" selection="608 0" stamp="1507185159733" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;basicGenerator&apos; from expression &apos;new BasicGenerator&lt;CountedObject&gt;(CountedObject.class)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;basicGenerator&apos;&#x0A;- Destination method: &apos;lt.b.generic.BAsicGeneratorDemo14.main()&apos;&#x0A;- Variable expression: &apos;new BasicGenerator&lt;CountedObject&gt;(CountedObject.class)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;basicGenerator&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.generic{BAsicGeneratorDemo14.java" name="basicGenerator" replace="true" selection="157 0" stamp="1507217787979" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;next&apos; from expression &apos;basicGenerator.next()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;next&apos;&#x0A;- Destination method: &apos;lt.b.generic.BAsicGeneratorDemo14.main()&apos;&#x0A;- Variable expression: &apos;basicGenerator.next()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;next&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.generic{BAsicGeneratorDemo14.java" name="next" replace="true" selection="257 0" stamp="1507217826792" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;compile&apos; from expression &apos;Pattern.compile(regex)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;compile&apos;&#x0A;- Destination method: &apos;lt.b.io.file.DirFilter.DirFilter()&apos;&#x0A;- Variable expression: &apos;Pattern.compile(regex)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;compile&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file{DirList.java" name="compile" replace="true" selection="590 0" stamp="1507304263224" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;list&apos; from expression &apos;path.list(new DirFilter(&quot;\\w+.java&quot;))&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;list&apos;&#x0A;- Destination method: &apos;lt.b.io.file.DirList.main()&apos;&#x0A;- Variable expression: &apos;path.list(new DirFilter(&quot;\\w+.java&quot;))&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;list&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file{DirList.java" name="list" replace="true" selection="494 0" stamp="1507304345267" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;list&apos; from expression &apos;sortedList.list()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;list&apos;&#x0A;- Destination method: &apos;lt.b.io.file.SortedList.main()&apos;&#x0A;- Variable expression: &apos;sortedList.list()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;list&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file{SortedList.java" name="list" replace="true" selection="423 0" stamp="1507306506528" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;list&apos; from expression &apos;path.list()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;list&apos;&#x0A;- Destination method: &apos;lt.b.io.file.SortedList.list()&apos;&#x0A;- Variable expression: &apos;path.list()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;list&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file{SortedList.java" name="list" replace="true" selection="266 0" stamp="1507307510719" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;locale&apos; from expression &apos;Directory.locale(&quot;.&quot;,&quot;\\w+&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;locale&apos;&#x0A;- Destination method: &apos;lt.b.io.file.tool.TestTool.testLocale()&apos;&#x0A;- Variable expression: &apos;Directory.locale(&quot;.&quot;,&quot;\\w+&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;locale&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.tool{TestTool.java" name="locale" replace="true" selection="850 0" stamp="1507342316829" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;list&apos; from expression &apos;new File(name).list()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;list&apos;&#x0A;- Destination method: &apos;lt.b.io.file.tool.TestTool.main()&apos;&#x0A;- Variable expression: &apos;new File(name).list()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;list&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.tool{TestTool.java" name="list" replace="true" selection="819 0" stamp="1507343124746" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;listFiles&apos; from expression &apos;new File(name).listFiles()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;listFiles&apos;&#x0A;- Destination method: &apos;lt.b.io.file.tool.TestTool.main()&apos;&#x0A;- Variable expression: &apos;new File(name).listFiles()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;listFiles&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.tool{TestTool.java" name="listFiles" replace="true" selection="865 0" stamp="1507343155026" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;bytes&apos; from expression &apos;s.getBytes()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;bytes&apos;&#x0A;- Destination method: &apos;lt.b.io.file.ex.FileExample.main()&apos;&#x0A;- Variable expression: &apos;s.getBytes()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;bytes&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.ex{FileExample.java" name="bytes" replace="true" selection="437 0" stamp="1507364352292" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;readInt&apos; from expression &apos;file.readInt()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;readInt&apos;&#x0A;- Destination method: &apos;lt.b.io.file.ex.RandomAcessFile.main()&apos;&#x0A;- Variable expression: &apos;file.readInt()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;readInt&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.ex{RandomAcessFile.java" name="readInt" replace="true" selection="335 0" stamp="1507382260629" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;read&apos; from expression &apos;inputFile.read(&quot;aaa&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;read&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.Test1.fun1()&apos;&#x0A;- Variable expression: &apos;inputFile.read(&quot;aaa&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;read&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{Test1.java" name="read" replace="true" selection="186 0" stamp="1507382830992" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;read1&apos; from expression &apos;BufferedInputFile.read1()&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;read1&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.Test1.test2()&apos;&#x0A;- Variable expression: &apos;BufferedInputFile.read1()&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;read1&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{Test1.java" name="read1" replace="true" selection="494 0" stamp="1507383390062" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;BasicFileOutput.java&apos; to &apos;interview/src/lt.b.io.file.classical&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Destination element: &apos;interview/src/lt.b.io.file.classical&apos;&#x0A;- Original element: &apos;lt.b.io.file.classical.BasicFileOutput.java&apos;" description="Copy compilation unit" destination="/src&lt;lt.b.io.file.classical" element1="/src&lt;lt.b.io.file.classical{BasicFileOutput.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1507388549615" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;read&apos; from expression &apos;BufferedInputFile.read(&quot;/home/liutao/fileOp/Mutt.java&quot;)&apos;&#x0A;- Original project: &apos;interview&apos;&#x0A;- Variable name: &apos;read&apos;&#x0A;- Destination method: &apos;lt.b.io.file.classical.Ex12.main()&apos;&#x0A;- Variable expression: &apos;BufferedInputFile.read(&quot;/home/liutao/fileOp/Mutt.java&quot;)&apos;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;read&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;lt.b.io.file.classical{Ex12.java" name="read" replace="true" selection="152 0" stamp="1507388738365" version="1.0"/>
</session>